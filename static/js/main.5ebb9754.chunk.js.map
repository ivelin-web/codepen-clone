{"version":3,"sources":["components/Editor.js","App.js","index.js"],"names":["Editor","displayName","language","value","onChange","className","onBeforeChange","editor","data","options","lineWrapping","lint","mode","lineNumbers","theme","App","useState","html","setHtml","css","setCss","js","setJs","srcDoc","setSrcDoc","openPreview","setOpenPreview","useEffect","timeout","setTimeout","clearTimeout","title","sandbox","frameBorder","width","height","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kPAQe,SAASA,EAAT,GAA6D,IAA3CC,EAA0C,EAA1CA,YAAaC,EAA6B,EAA7BA,SAAUC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SAK3D,OACI,sBAAKC,UAAU,mBAAf,UACI,qBAAKA,UAAU,eAAf,SAA+BJ,IAC/B,cAAC,aAAD,CAAkBK,eAPL,SAACC,EAAQC,EAAML,GAChCC,EAASD,IAM2CA,MAAOA,EAAOE,UAAU,sBAAsBI,QAAS,CAAEC,cAAc,EAAMC,MAAM,EAAMC,KAAMV,EAAUW,aAAa,EAAMC,MAAO,iBCuChLC,MApDf,WACI,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAsBF,mBAAS,IAA/B,mBAAOG,EAAP,KAAYC,EAAZ,KACA,EAAoBJ,mBAAS,IAA7B,mBAAOK,EAAP,KAAWC,EAAX,KACA,EAA4BN,mBAAS,IAArC,mBAAOO,EAAP,KAAeC,EAAf,KACA,EAAsCR,oBAAS,GAA/C,mBAAOS,EAAP,KAAoBC,EAApB,KA2BA,OAzBAC,qBAAU,WACN,IAAMC,EAAUC,YAAW,WACvBL,EAAU,wFAAD,OAGYL,EAHZ,sGAMKF,EANL,6CAOaI,EAPb,oEAWLJ,GACgB,IAAhBQ,GAAwBC,GAAe,IAEvB,IAAhBD,GAAyBC,GAAe,KAE7C,KAEH,OAAO,WACHI,aAAaF,MAElB,CAACX,EAAME,EAAKE,IAGX,qCACI,0BAAShB,UAAU,gBAAnB,UACI,cAACL,EAAD,CAAQE,SAAS,MAAMD,YAAY,OAAOE,MAAOc,EAAMb,SAAUc,IACjE,cAAClB,EAAD,CAAQE,SAAS,MAAMD,YAAY,MAAME,MAAOgB,EAAKf,SAAUgB,IAC/D,cAACpB,EAAD,CAAQE,SAAS,aAAaD,YAAY,KAAKE,MAAOkB,EAAIjB,SAAUkB,OAEvEG,EACG,yBAASpB,UAAU,OAAnB,SACI,wBAAQkB,OAAQA,EAAQQ,MAAM,SAASC,QAAQ,gBAAgBC,YAAY,IAAIC,MAAM,OAAOC,OAAO,WAGvG,yBAAS9B,UAAU,uBAAnB,SACI,gEC3CpB+B,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,W","file":"static/js/main.5ebb9754.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"codemirror/lib/codemirror.css\";\r\nimport \"codemirror/theme/material.css\";\r\nimport \"codemirror/mode/xml/xml\";\r\nimport \"codemirror/mode/javascript/javascript\";\r\nimport \"codemirror/mode/css/css\";\r\nimport { Controlled as ControlledEditor } from \"react-codemirror2\";\r\n\r\nexport default function Editor({ displayName, language, value, onChange }) {\r\n    const handleChange = (editor, data, value) => {\r\n        onChange(value);\r\n    };\r\n\r\n    return (\r\n        <div className=\"editor-container\">\r\n            <div className=\"editor-title\">{displayName}</div>\r\n            <ControlledEditor onBeforeChange={handleChange} value={value} className=\"code-mirror-wrapper\" options={{ lineWrapping: true, lint: true, mode: language, lineNumbers: true, theme: \"material\" }} />\r\n        </div>\r\n    );\r\n}\r\n","import { useEffect, useState } from \"react\";\nimport Editor from \"./components/Editor\";\n\nfunction App() {\n    const [html, setHtml] = useState(\"\");\n    const [css, setCss] = useState(\"\");\n    const [js, setJs] = useState(\"\");\n    const [srcDoc, setSrcDoc] = useState(\"\");\n    const [openPreview, setOpenPreview] = useState(false);\n\n    useEffect(() => {\n        const timeout = setTimeout(() => {\n            setSrcDoc(`\n                <html>\n                    <head>\n                        <style>${css}</style>\n                    </head>\n                    <body>\n                        ${html}\n                        <script>${js}</script>\n                    </body\n                </html>`);\n\n            if (html) {\n                openPreview !== true && setOpenPreview(true);\n            } else {\n                openPreview !== false && setOpenPreview(false);\n            }\n        }, 750);\n\n        return () => {\n            clearTimeout(timeout);\n        };\n    }, [html, css, js]);\n\n    return (\n        <>\n            <section className=\"pane top-pane\">\n                <Editor language=\"xml\" displayName=\"HTML\" value={html} onChange={setHtml} />\n                <Editor language=\"css\" displayName=\"CSS\" value={css} onChange={setCss} />\n                <Editor language=\"javascript\" displayName=\"JS\" value={js} onChange={setJs} />\n            </section>\n            {openPreview ? (\n                <section className=\"pane\">\n                    <iframe srcDoc={srcDoc} title=\"output\" sandbox=\"allow-scripts\" frameBorder=\"0\" width=\"100%\" height=\"100%\" />\n                </section>\n            ) : (\n                <section className=\"no-content-container\">\n                    <h4>Add some html to preview</h4>\n                </section>\n            )}\n        </>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}